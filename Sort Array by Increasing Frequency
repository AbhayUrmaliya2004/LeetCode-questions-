/*
* LeetCode - (1636)
* T.C :- O(NlogN), 
* S.C :- O(N)
*/
class Solution {
    public int[] frequencySort(int[] nums) {
        Map<Integer,Integer>mp=new HashMap<>();
        List<Integer>list = new ArrayList<>();
        for(int n : nums){
            list.add(n);
            mp.put(n,mp.getOrDefault(n,0)+1);
        }
        Collections.sort(list, new Comparator<Integer>(){
            public int compare(Integer a, Integer b){
                if(mp.get(a)<mp.get(b)){
                    return -1;
                }else if(mp.get(a)>mp.get(b)){
                    return 1;
                }else{ // same frequency 
                    if(a == b)return 0;
                    else {
                        return b-a ;
                    }
                }
            }
        });
        int i=0; 
        for(int n : list){
            nums[i++]=n ;
        }
        return nums ;
    }
}
