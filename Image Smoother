// LeetCode - (661)
// T.C.:-  O(N), N->m*n , FASTER THAN 99.16%
// S.C. :- O(N)
class Solution {
    public int[][] imageSmoother(int[][] img) {
        int m = img.length , n = img[0].length ;
        int[][] ans = new int[m][n];
        for(int i=0 ; i<m ; i++){
            for(int j=0 ; j<n ; j++){
                ans[i][j] = find_avg(img, i, j);
            }
        }
        return ans ;
    }
    public int find_avg(int[][] arr, int i, int j){
        int sum = 0 , count = 0 ;
        
        // self 
        sum += arr[i][j];
        count++ ;
        // left upper 
        if(i>0 && j>0){
            sum += arr[i-1][j-1];
            count++ ;
        }
        // upper 
        if(i > 0){
            sum += arr[i-1][j];
            count ++ ;
        }
        // right upper 
        if(i>0 && j<arr[0].length-1){
            sum += arr[i-1][j+1];
            count++ ;
        }
        // right 
        if(j<arr[0].length-1){
            sum += arr[i][j+1];
            count++ ;
        }
        // right down
        if(i<arr.length-1 && j<arr[0].length-1){
            sum += arr[i+1][j+1];
            count++ ;
        }
        // down 
        if(i < arr.length-1){
            sum += arr[i+1][j];
            count++ ;
        }
        // left down 
        if(i<arr.length-1 && j>0){
            sum += arr[i+1][j-1];
            count ++ ;
        }
        // left 
        if(j > 0){
            sum += arr[i][j-1];
            count++ ;
        }
//        System.out.println("i : "+i +" j : "+j+" sum : "+sum +" count : "+count );
        return sum/count ;
    }
}
