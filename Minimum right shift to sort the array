// LeetCode (2855)
class Solution {
    public int minimumRightShifts(List<Integer> nums) {
        int []arr = new int[nums.size()];
        for(int i=0 ; i<nums.size() ; i++){
            arr[i] = nums.get(i);
        }
        Collections.sort(nums);
        int idx = 0 ;
        for(int i=0 ; i<arr.length-1 ; i++){
            if(arr[i]>arr[i+1]){
                idx = (i+1) ;
                break ;
            }
        }
        int j=0 , n = nums.size();
        while(j<nums.size()){
            System.out.println(nums.get(j)+" "+arr[(j+idx)%n]);
            if(nums.get(j) != arr[(j+idx)%n])return -1;
            j++ ;
        }
        return (n-idx)%n ;
    }
}
