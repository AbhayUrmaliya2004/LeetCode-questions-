/*
* Leetcode :- (912) 
* T.C :- O(NlogN)
* S.C :- O(N)
* Approach :- Merge Sort
*/
class Solution {
    public int[] sortArray(int[] nums) {
        mergeSort(nums,0,nums.length-1);
        return nums;
    }
    public void mergeSort(int[]nums, int st, int end){
        if(st==end) return ;
        
        int mid = (st+end)/2;
        
        mergeSort(nums, st, mid);
        mergeSort(nums, mid+1, end);
        // now we have two half sorted array merge them 
        
        int[] arr = new int[end-st+1];
        int i=st, j=mid+1, idx=0;
        while(i<=mid && j<=end){
            if(nums[i]<=nums[j]){
                arr[idx++]=nums[i++];
            }else{
                arr[idx++]=nums[j++];
            }
        }
        
        while(i<=mid){
            arr[idx++]=nums[i++];
        }
        while(j<=end){
            arr[idx++]=nums[j++];
        }
               
        // copy the sorted array to the nums and return 
        for(i=st ; i<=end ; i++){
            nums[i]=arr[i-st];
        }
    }
}
