/*
* Leetcode-(452)
* T.C :- O(NlogN)
* S.C :- O(N)
*/
class Solution {
    public int findMinArrowShots(int[][] points) {
        if(points.length == 1)return 1;
        // sorting according to starting point
        Arrays.sort(points, (int[]a,int[]b)->Integer.compare(a[0], b[0]));
        
        int n=points.length, i=0, count=0, right = points[0][1] ;
        int j=0;
        while(i<n){
            j=i+1 ;
            right = points[i][1];
            // check for overlapping
            while(j<n && points[j][0] <= right){
                right = Math.min(right, points[j][1]);
                j++ ;
            }
            count++ ;
            i = j ;
        }
        return count ;
    }
}
