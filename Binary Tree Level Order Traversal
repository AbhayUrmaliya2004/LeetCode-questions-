//LeetCode-102
class Solution {
    public List<List<Integer>> levelOrder(TreeNode root) {
        List<List<Integer>> ans = new ArrayList<>();
        if(root == null)return ans ;
        int level = height(root)+1 ;
        for(int i=1 ; i<=level ; i++){
            List<Integer> list = new ArrayList<>();
            levelOrderTraversal(root, i, list);
            ans.add(list);
        }
        return ans ;
    }
    
    
    public void levelOrderTraversal(TreeNode root, int level, List<Integer> list){
        if(root == null)return ;
        if(level == 1){
            list.add(root.val);
        }
        
        if(root.left != null)levelOrderTraversal(root.left, level-1, list);
        if(root.right != null)levelOrderTraversal(root.right, level-1, list);
    }
    
    public int height(TreeNode root){
        if(root == null || (root.left==null && root.right == null))return 0;
        return 1+Math.max(height(root.left), height(root.right));
    }
}
