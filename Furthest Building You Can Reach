/*
* LeetCode - (1642)
* T.C :- O(NlogN), for using pq
* S.C :_ O(NlogN)
*/

class Solution {
    public int furthestBuilding(int[] heights, int bricks, int ladders) {
        PriorityQueue<Integer>pq = new PriorityQueue<>();// min pq
        
        for(int i=0; i<heights.length-1; i++){
            int gap = heights[i+1]-heights[i];
            
            if(gap > 0){
                pq.add(gap);
            }
            // ladders are not enough to count 
            if(pq.size()>ladders){
                // minimum gap is to be filled by bricks
                bricks -= pq.poll();
            }
            if(bricks < 0){
                return i ;
            }
        }
        return heights.length-1 ;
    }
}
