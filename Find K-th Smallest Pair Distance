/*
* Leetcode :- (719)
* T.C :- O(NlogN)
* S.C :- O(1)
*/
class Solution {
    public int smallestDistancePair(int[] nums, int k) {
        Arrays.sort(nums);
        int n=nums.length;
        int low=0, high=nums[n-1]-nums[0];
        
        while(low <= high){
            int mid = low+(high-low)/2;
            
            if(countPairs(nums, mid) < k) low = mid+1;
            else high=mid-1;
        }
        return low;
    }
    public int countPairs(int[]nums, int maxDis){
        int count = 0, n=nums.length;
        int j = 0;
        for(int i=0 ; i<n ; i++){
            while(j < n && nums[j]-nums[i] <= maxDis)j++;
            count += j-i-1;
        }
        return count ;
    }
}
