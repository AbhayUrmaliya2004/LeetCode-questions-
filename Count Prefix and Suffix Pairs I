/*
* LeetCode - (3042)
* T.C :- O(N^2*M), N->size of array, M->word length
* S.C :- O(1)
*/
class Solution {
    public int countPrefixSuffixPairs(String[] words) {
        int ans = 0 ;
        for(int i=0 ; i<words.length-1 ; i++){
            for(int j=i+1 ; j<words.length ; j++){
                if(isPrefixAndSuffix(words[i], words[j]))ans++ ;
            }
        }
        return ans ;
    }
    public boolean isPrefixAndSuffix(String s1, String s2){
        if(s1.length() > s2.length())return false ;
        boolean pref = true ;
        int i=0, j = 0;
        while(i<s1.length()){
            if(s1.charAt(i)!=s2.charAt(j)){
                pref = false ;
                break ;
            }
            i++ ;
            j++ ;
        }
        if(!pref)return false ;
        // check suffix 
        boolean suff = true ;
        i = s1.length()-1 ;
        j = s2.length()-1 ;
        while(i>=0){
            if(s1.charAt(i) != s2.charAt(j)){
                suff = false ;
                break ;
            }
            i-- ;
            j-- ;
        }
        if(!suff)return false ;
        return true ;
    }
}
