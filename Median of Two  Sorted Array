//LeetCode - (4)
class Solution {
     public  double findMedianSortedArrays(int[] nums1, int[] nums2) {

       int length = 0 ;
       int value ;
       if( (nums1.length + nums2.length)% 2 == 0){
           length = (nums1.length + nums2.length)/2+1 ;
  //         System.out.println("length : "+ length);
       }else if((nums1.length + nums2.length)% 2 != 0){
           length = (nums1.length + nums2.length)/2+1;
  //         System.out.println("length : "+ length);
       }
       int []arr = new int[length];
       int i = 0 , j = 0 , count = 0 ;
       while( i < nums1.length && j < nums2.length ){
           if(count == length)break ;
           if(nums1[i] < nums2[j]){
               arr[count]=nums1[i];
               count++ ;
               i++ ;
           }else{
               arr[count]=nums2[j];
               count++ ;
               j++ ;
           }
       }
       while(i < nums1.length && count < length) {
 //   	   System.out.println("i : "+ i );
    	   arr[count++] = nums1[i++];
       }
       while(j < nums2.length && count < length) {
  //  	   System.out.println("j : "+j);
    	   arr[count++] = nums2[j++];   
       }
//       for(int k = 0; k < arr.length ; k++) {
 //   	   System.out.print(arr[k]+" ");
 //      }
//       System.out.println();
       double ans = 0 ;
       if((nums1.length + nums2.length)% 2 == 0){
   // 	   System.out.println(arr[arr.length-2] + " "+ arr[arr.length-1]);
           ans = (arr[arr.length-1]+arr[arr.length-2]);
           ans /= 2;
   //        System.out.println(arr[arr.length-1]/2+arr[arr.length-2]/2);
       }else{
 //   	   System.out.println(arr[arr.length-1]);
           ans = arr[arr.length-1] ;
       }
       return ans ;
   
     }
}
