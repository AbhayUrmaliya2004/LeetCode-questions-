/*
* Leetcode - (3066)
* T.C :- O(NlogN), for priorityqueue insertion NlogN + N for traversing 
* S.C :- O(N), for priorityqueue
*/
class Solution {
    public int minOperations(int[] nums, int k) {
        PriorityQueue<Long> pq = new PriorityQueue<>();
        for(int n : nums){
            pq.add((long)(n));
        }
        
        // work
        int count = 0;
        while(pq.size()>=2 && pq.peek()<k){
            long min = pq.remove();
            long max = pq.remove();
            
            long num = min*2+max ;
            pq.add(num);
            count++ ;
        }
        return count ;
    }
}
