// LeetCode - (2870)
--> T.C.:- O(N), 
--> S.C.:- O(N), for creating hashmap
class Solution {
    public int minOperations(int[] nums) {
        int noOfOperations = 0 ;
        // Map contains value and 
        Map<Integer,Integer> mp = new HashMap<>();
        for(int i=0 ; i<nums.length ; i++){
            if(!mp.containsKey(nums[i])){
                mp.put(nums[i], 1);
            }else{
                mp.put(nums[i], mp.get(nums[i])+1);
            }
        }
//        System.out.println(mp);
        // counting minimum no of operations
        for(int n : mp.values()){
            if(n == 1)return -1 ;
            
            if(n%3 == 0){ // divides by 3 completely
                noOfOperations += n/3 ;
            }else if(n > 3){
                int rem = n%3 ;
                noOfOperations += n/3 ;
                n = n%3 ;
                if(rem == 1){
                    noOfOperations -= 1 ;
                    n += 3;
                    
                    noOfOperations += (n/2) ;
                }else{    // only case left with 2
                    noOfOperations += 1 ; 
                }
            }else{  // only case left with 2
                    noOfOperations += 1 ;  
            }
        }
        return noOfOperations ;
    }
}
