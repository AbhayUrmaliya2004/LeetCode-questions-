/*
~T.C. :- O(n)~
~S.C. :- O(1)~
*/
/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode[] splitListToParts(ListNode head, int k) {
        ListNode[] ans = new ListNode[k];
        int size = 0 ;
        ListNode temp = head ;
        while(temp != null){
            size++ ;
            temp = temp.next ;
        }
        
        int extraNodes = size%k ;
        int nodesInOneList = size/k ;
        
        temp = head ;
        for(int i=0 ; i<k ; i++){
            ans[i] = temp ;
            int count = 0,count1 = 0 ;
//            System.out.println(nodesInOneList +" "+extraNodes);
            if(extraNodes-- > 0)count1 = 1 ;
            while(count < nodesInOneList+count1-1){
                temp = temp.next ;
                count++ ;
            }
            if(temp == null)break ;
            ListNode t = temp.next ;
            temp.next = null ;
            temp = t ;
        }
        return ans ;
    }
}
