// LeetCode - (70)
--> Approach :- Dynamic Programming
--> T.C :- O(N)
--> S.C :- O(N), for array and extra stack
class Solution {
    public int climbStairs(int n) {
        int[]dp = new int[n+1];
        for(int i=0 ; i<dp.length ; i++){
            dp[i] = -1 ;
        }
        dp[n] = helper(n, dp);
        return dp[n] ;
    }
    public int helper(int n, int[] dp){
        if(n==1 || n==2)
            return dp[n]=n;
        
        if(dp[n] != -1)return dp[n];
        
        return dp[n] = helper(n-1, dp)+helper(n-2, dp); 
    }
}
