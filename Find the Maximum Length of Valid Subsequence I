/*
* Leetcode - (3201)
* T.C :- O(N)
* S.C :- O(1)
*/
class Solution {
    public int maximumLength(int[] nums) {
        int n = nums.length ;
        int odd = 0, even = 0;
        int oddeven = 0, evenodd = 0;
        int oddeven_prev = 1, evenodd_prev = 0;

        for(int i=0 ; i<n ; i++){
            if(nums[i]%2 == 0){  // [1,2,3,4]
                even++ ;
            }else{
                odd++ ;
            }

            if(evenodd_prev != nums[i]%2){ // prev should have been even
                evenodd_prev = nums[i]%2==0 ? 0:1;
                evenodd++ ;            
            }

            if(oddeven_prev != nums[i]%2){
                oddeven_prev = nums[i]%2==0 ? 0:1;
                oddeven++ ;
            }
        }

        return Math.max(Math.max(odd, even), Math.max(oddeven, evenodd));
    }
}
