/*
* Leetcode :- (1371)
* T.C :- O(N)
* S.C :- O(N)
*/
class Solution {
    public int findTheLongestSubstring(String s) {
        Map<Integer, Integer> mp = new HashMap<>();
        
        int mask = 0, n=s.length(), res=0;
        mp.put(mask, -1);
        for(int i=0 ; i<n ; i++){
            char ch = s.charAt(i);
            if(ch=='a' || ch=='e' || ch=='i' || ch=='o' || ch=='u'){
                mask = mask ^ (1 << (ch-'a'+1));
            }
            
            if(mp.containsKey(mask)){
                res = Math.max(res, i-mp.get(mask));
            }else{
                mp.put(mask, i);
            }
        }
        return res ;
    }
}
