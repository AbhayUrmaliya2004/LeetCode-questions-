/*
* Leetcode - (151)
* T.C :- O(N), faster than 92%
* S.C :- O(N), O(N) for extra stack space, better than 86% 
*/
class Solution {
    public String reverseWords(String s) {
        Stack<String> st = new Stack<>();
        
        for(int i=0 ; i<s.length() ; i++){
            if(s.charAt(i) == ' ')continue ;
            
            int j=i ; 
            while(j<s.length() && s.charAt(j) !=' '){
                j++ ;
            }
            st.add(s.substring(i, j));
            i = j-1 ;
        }
            
        StringBuilder sb = new StringBuilder();
        while(st.size() > 1){
            sb.append(st.pop());
            sb.append(" ");
        }
        sb.append(st.pop());
        
        return sb.toString() ;
    }
}
