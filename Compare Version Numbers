/*
* Leetcode - (165)
* T.C :- O(N)
* S.C :- O(1)
*/
class Solution {
    public int compareVersion(String version1, String version2) {
        int nums1I = 0 , nums2I = 0 ;
        while(true){
          int num1 = 0 ;
          int num2 = 0 ;
          int i = nums1I ;
          while( i < version1.length() && version1.charAt(i) != '.'){
             num1 = num1*10 + nums(version1.charAt(i));
              i++ ;
          }
          nums1I = i+1 ;
          i = nums2I ;
          while( i < version2.length() && version2.charAt(i) != '.'){
             num2 = num2*10 + nums(version2.charAt(i));
              i++ ;
          }  
          nums2I = i+1 ;
//          System.out.println("num1 : "+num1 + " num2 : "+num2);
          if(num1 > num2)return 1 ;
          if(num2 > num1)return -1 ;
          if(nums1I >= version1.length() && nums2I >= version2.length()){
              return 0 ;
          }
        }
    }
    public int nums(char ch){
        switch(ch){
                case '1' : return 1 ;
                case '2' : return 2 ;
                case '3' : return 3 ;
                case '4' : return 4 ;
                case '5' : return 5 ;
                case '6' : return 6 ;
                case '7' : return 7 ;
                case '8' : return 8 ;
                case '9' : return 9 ;
                case '0' : return 0 ;
        }
        return -1 ;
    }
}
