/*
* Leetcode - (1482)
* T.C :- O(Nlog(Max-Min))
* S.C :- O(1)
*/
class Solution {
    public int minDays(int[] bloomDay, int m, int k) {
        int min = (int)1e9,  max = -1 ;
        for(int num : bloomDay){
            if(num < min) min = num ;
            if(num > max) max = num ;
        }

        int st = min, end = max, mid ;

        while(st <= end){
            mid = st+(end-st)/2 ;
            boolean isPossible = helper(bloomDay, mid, m, k);
            if(isPossible){
                end = mid-1 ;
            }else{
                st = mid+1 ;
            }
        }
        return (st<=max) ? st : -1 ;// min ans 
    }
    public boolean helper(int[] bloomDay, int day, int m, int k){
        int count = 0, bouquets = 0;
        for(int i=0 ; i<bloomDay.length ; i++){
            if(bloomDay[i] <= day){
                count++ ;
            }else{
                bouquets += (count/k);
                count = 0;
            }
        }
        if(count > 0){ // reached at last index
            bouquets += (count/k);
        }
        return (bouquets >= m);
    }
}
