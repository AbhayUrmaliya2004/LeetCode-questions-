/*
* Leetcode - (1992)
* T.C :- O(M*N)
* S.C :- O(M*N) for visited array 
* Approach :- brute force approach check where the landfarm exist and store indexes
*/
class Solution {
    public int[][] findFarmland(int[][] land) {
        List<int[]> list = new ArrayList<>();
        int rows = land.length, cols = land[0].length ; 
        boolean[][] visited = new boolean[rows][cols] ;
        
        for(int row=0 ; row<rows ; row++){
            for(int col=0 ; col<cols ; col++){
                // if already visited then don't check
                if(visited[row][col])continue ;
                
                if(land[row][col] == 1){
                    int[] coordinates = new int[]{row, col, 0, 0};
                    int i = row, j=col ;
                    while(j+1<cols && land[i][j+1]==1){
                        j++ ;
                    }
                    
                    while(i+1<rows && land[i+1][j]==1){
                        i++ ;
                    }
                    
                    coordinates[2] = i;
                    coordinates[3]= j ;
                    // marking here so that we don't count it again
                    for(int x=coordinates[0] ; x<=coordinates[2] ; x++){
                        for(int y=coordinates[1] ; y<=coordinates[3] ; y++){
                            visited[x][y] = true ;
                        }
                    }
                    list.add(coordinates);
                }
            }
        }
        
        int[][] ans = new int[list.size()][4];
        int i=0, j=0 ;
        for(int[] arr1D : list){
            for(int num : arr1D){
                ans[i][j] = num ;
                j++ ;
            }
            i++ ;
            j=0 ;
        }
        return ans ;
    }
}
